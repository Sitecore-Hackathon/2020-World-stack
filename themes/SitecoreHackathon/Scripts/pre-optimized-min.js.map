{"version":3,"sources":["swiper.js","component-navigation.js","test.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","jQuery","document","ready","$","console","log","each","submenuLink","this","find","click","list","addClass","on","e","preventDefault","target","hasClass","parent","removeClass","global","factory","exports","module","define","amd","self","Swiper","selector","context","arr","i","Dom7","els","tempParent","html","trim","indexOf","toCreate","doc","createElement","innerHTML","childNodes","length","push","match","querySelectorAll","getElementById","split","nodeType","win","unique","uniqueArray","onResize","swiper","params","el","offsetWidth","breakpoints","setBreakpoint","allowSlideNext","allowSlidePrev","snapGrid","updateSize","updateSlides","updateSlidesClasses","slidesPerView","isEnd","centeredSlides","slideTo","slides","activeIndex","autoplay","running","paused","run","watchOverflow","checkOverflow","dummyEventListener","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","createEvent","initEvent","children","style","setAttribute","getElementsByTagName","location","hash","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","fn","Class","Methods","className","classes","j","classList","add","remove","contains","toggleClass","toggle","attr","attrs","value","arguments$1","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","handleLiveEvent","eventData","dom7EventData","unshift","is","targetSelector","listener","apply","parents","k","handleEvent","args","len","eventType","capture","undefined","events","event$1","dom7LiveListeners","proxyListener","event","dom7Listeners","off","handlers","handler","dom7proxy","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","fireCallBack","call","dom","outerWidth","includeMargins","styles","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parentNode","closest","foundElements","found","matchedItems","removeChild","toAdd","Object","keys","forEach","methodName","SwiperClass","eventsListeners","eventName","Utils","deleteProps","object","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","extend","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","enumerable","Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","defineProperty","get","gestures","staticAccessors","components","configurable","priority","method","once","onceHandler","f7proxy","eventHandler","emit","Array","isArray","slice","useModulesParams","instanceParams","instance","modules","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","set","use","installModule","name","proto","install","m","concat","defineProperties","platform","ua","device","screenWidth","screenHeight","android","ipad","ipod","iphone","ie","edge","firefox","windows","electron","macos","update","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","slidesForMargin","slideIndex","cssMode","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slideClass","slidesLength","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerColumnFill","max","newSlidesGrid","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","boxSizing$1","swiperSlideSize","abs","slidesPerGroupSkip","effect","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize$1","allSlidesOffset","snapIndex","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","visibleSlides","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideProgress","minTranslate","autoHeight","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","wasBeginning","wasEnd","activeSlide","realIndex","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","destroyed","transition$1","transitionStart","direction","dir","initialSlide","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","threshold","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","ios","androidChrome","desktop","cordova","phonegap","toLowerCase","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","dummyEventAttached","defaults","init","touchEventsTarget","updateOnWindowResize","edgeSwipeDetection","edgeSwipeThreshold","freeMode","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","prototypes","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","formElements","shouldPreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","diffX","diffY","sqrt","pow","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","moveDistance","currentSlideSize","stopIndex","groupSize","increment$1","ratio","navigation","nextEl","prevEl","onScroll","onClick","stopImmediatePropagation","start","move","end","passive","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","minRatio","substr","innerHeight","sort","b","ref","innerWidth","wasLocked","lastSlidePosition","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","onReady","image","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","__proto__","spv","breakLoop","translateValue","newDirection","needUpdate","currentDirection","slideEl","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","static","Support$1","support","Browser","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","observeSlideChildren","disconnect","Observer$1","Virtual","force","onRendered","lazy","load","ref$1","addSlidesBefore","addSlidesAfter","ref$2","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","eventsTarged","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent$1","sign","ignoreWheelEvents","sensitivity","timeout","recentWheelEvents$1","shift","prevEvent$1","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","newEvent","raw","prevEvent","animateSlider","releaseScroll","getTime","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onPrevClick","onNextClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","getPointerPosition","clientX","clientY","setDragPosition","positionRatio","dragStartPos","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragClass","dragEl","draggable","Parallax","setTransform","p","currentOpacity","currentScale","parallax","parallaxEl","$parallaxEl","parallaxDuration","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","onGestureChange","scaleMove","onGestureEnd","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","activeListenerWithCapture","slideSelector","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","guess","i1","i3","binarySearch","array","interpolate","getInterpolateFunction","c","controller","spline","setTranslate$1","setControlledTranslate","by","controlledTranslate","inverse","controlled","control","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","setHistory","slugify","includes","currentState","state","HashNavigation","onHashCange","newHash","setHash","watchState","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","pause","waitForTransition","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","prefixedPointerEvents","perspectiveOrigin","Thumbs","thumbsParams","thumbs","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","hideOnClick","toEdge","fromEdge","isHidden","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","touchStart","touchEnd","doubleTap","slideChange","loadOnTransitionStart","scroll","scrollbarDragMove","notificationClass","paginationUpdate","disableOnInteraction","onVisibilityChange","visibilityState","beforeTransitionStart","sliderFirstMove","beforeDestroy","myFn"],"mappings":"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","file":"pre-optimized-min.js","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * Swiper 5.3.6\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * http://swiperjs.com\r\n *\r\n * Copyright 2014-2020 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: February 29, 2020\r\n */\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Swiper = factory());\n})(this, function () {\n  'use strict';\n  /**\r\n   * SSR Window 1.0.1\r\n   * Better handling for window object in SSR environment\r\n   * https://github.com/nolimits4web/ssr-window\r\n   *\r\n   * Copyright 2018, Vladimir Kharlampidi\r\n   *\r\n   * Licensed under MIT\r\n   *\r\n   * Released on: July 18, 2018\r\n   */\n\n  var doc = typeof document === 'undefined' ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: ''\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {}\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        }\n      };\n    },\n    location: {\n      hash: ''\n    }\n  } : document; // eslint-disable-line\n\n  var win = typeof window === 'undefined' ? {\n    document: doc,\n    navigator: {\n      userAgent: ''\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        }\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {}\n  } : window; // eslint-disable-line\n\n  /**\r\n   * Dom7 2.1.3\r\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\r\n   * http://framework7.io/docs/dom.html\r\n   *\r\n   * Copyright 2019, Vladimir Kharlampidi\r\n   * The iDangero.us\r\n   * http://www.idangero.us/\r\n   *\r\n   * Licensed under MIT\r\n   *\r\n   * Released on: February 11, 2019\r\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this; // Create array-like object\n\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n\n    self.length = arr.length; // Return collection with methods\n\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n\n    if (selector) {\n      // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n\n          if (html.indexOf('<li') === 0) {\n            toCreate = 'ul';\n          }\n\n          if (html.indexOf('<tr') === 0) {\n            toCreate = 'tbody';\n          }\n\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {\n            toCreate = 'tr';\n          }\n\n          if (html.indexOf('<tbody') === 0) {\n            toCreate = 'table';\n          }\n\n          if (html.indexOf('<option') === 0) {\n            toCreate = 'select';\n          }\n\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) {\n              arr.push(els[i]);\n            }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) {\n        uniqueArray.push(arr[i]);\n      }\n    }\n\n    return uniqueArray;\n  } // Classes and attributes\n\n\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n\n    var classes = className.split(' ');\n\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n          this[j].classList.add(classes[i]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function removeClass(className) {\n    var classes = className.split(' ');\n\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n          this[j].classList.remove(classes[i]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function hasClass(className) {\n    if (!this[0]) {\n      return false;\n    }\n\n    return this[0].classList.contains(className);\n  }\n\n  function toggleClass(className) {\n    var classes = className.split(' ');\n\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n          this[j].classList.toggle(classes[i]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) {\n        return this[0].getAttribute(attrs);\n      }\n\n      return undefined;\n    } // Set attrs\n\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n\n    return this;\n  } // eslint-disable-next-line\n\n\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n\n    return this;\n  }\n\n  function data(key, value) {\n    var el;\n\n    if (typeof value === 'undefined') {\n      el = this[0]; // Get value\n\n      if (el) {\n        if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute(\"data-\" + key);\n\n        if (dataKey) {\n          return dataKey;\n        }\n\n        return undefined;\n      }\n\n      return undefined;\n    } // Set value\n\n\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n\n      if (!el.dom7ElementDataStorage) {\n        el.dom7ElementDataStorage = {};\n      }\n\n      el.dom7ElementDataStorage[key] = value;\n    }\n\n    return this;\n  } // Transforms\n  // eslint-disable-next-line\n\n\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n\n    return this;\n  }\n\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n\n    return this;\n  } // Events\n\n\n  function on() {\n    var assign;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n\n    if (typeof args[1] === 'function') {\n      assign = args, eventType = assign[0], listener = assign[1], capture = assign[2];\n      targetSelector = undefined;\n    }\n\n    if (!capture) {\n      capture = false;\n    }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n\n      if (!target) {\n        return;\n      }\n\n      var eventData = e.target.dom7EventData || [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      if ($(target).is(targetSelector)) {\n        listener.apply(target, eventData);\n      } else {\n        var parents = $(target).parents(); // eslint-disable-line\n\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) {\n            listener.apply(parents[k], eventData);\n          }\n        }\n      }\n    }\n\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      listener.apply(this, eventData);\n    }\n\n    var events = eventType.split(' ');\n    var j;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n\n          if (!el.dom7Listeners) {\n            el.dom7Listeners = {};\n          }\n\n          if (!el.dom7Listeners[event]) {\n            el.dom7Listeners[event] = [];\n          }\n\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n\n          if (!el.dom7LiveListeners) {\n            el.dom7LiveListeners = {};\n          }\n\n          if (!el.dom7LiveListeners[event$1]) {\n            el.dom7LiveListeners[event$1] = [];\n          }\n\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function off() {\n    var assign;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n\n    if (typeof args[1] === 'function') {\n      assign = args, eventType = assign[0], listener = assign[1], capture = assign[2];\n      targetSelector = undefined;\n    }\n\n    if (!capture) {\n      capture = false;\n    }\n\n    var events = eventType.split(' ');\n\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = void 0;\n\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function trigger() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = void 0;\n\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        } // eslint-disable-next-line\n\n\n        el.dom7EventData = args.filter(function (data, dataIndex) {\n          return dataIndex > 0;\n        });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n\n    return this;\n  }\n\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) {\n        return;\n      }\n\n      callback.call(this, e);\n\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n\n    return this;\n  }\n\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n\n      return this[0].offsetWidth;\n    }\n\n    return null;\n  }\n\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n\n      return this[0].offsetHeight;\n    }\n\n    return null;\n  }\n\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    }\n\n    return null;\n  }\n\n  function styles() {\n    if (this[0]) {\n      return win.getComputedStyle(this[0], null);\n    }\n\n    return {};\n  }\n\n  function css(props, value) {\n    var i;\n\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) {\n          return win.getComputedStyle(this[0], null).getPropertyValue(props);\n        }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n\n        return this;\n      }\n    }\n\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n\n      return this;\n    }\n\n    return this;\n  } // Iterate over the collection passing elements to `callback`\n\n\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) {\n      return this;\n    } // Iterate over the current collection\n\n\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    } // Return `this` to allow chained DOM operations\n\n\n    return this;\n  }\n\n  function filter(callback) {\n    var matchedItems = [];\n    var dom = this;\n\n    for (var i = 0; i < dom.length; i += 1) {\n      if (callback.call(dom[i], i, dom[i])) {\n        matchedItems.push(dom[i]);\n      }\n    }\n\n    return new Dom7(matchedItems);\n  } // eslint-disable-next-line\n\n\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n\n    return this;\n  } // eslint-disable-next-line\n\n\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n\n    return this;\n  }\n\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n\n    if (!el || typeof selector === 'undefined') {\n      return false;\n    }\n\n    if (typeof selector === 'string') {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      }\n\n      compareWith = $(selector);\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) {\n          return true;\n        }\n      }\n\n      return false;\n    } else if (selector === doc) {\n      return el === doc;\n    } else if (selector === win) {\n      return el === win;\n    }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  function index() {\n    var child = this[0];\n    var i;\n\n    if (child) {\n      i = 0; // eslint-disable-next-line\n\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) {\n          i += 1;\n        }\n      }\n\n      return i;\n    }\n\n    return undefined;\n  } // eslint-disable-next-line\n\n\n  function eq(index) {\n    if (typeof index === 'undefined') {\n      return this;\n    }\n\n    var length = this.length;\n    var returnIndex;\n\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n\n    if (index < 0) {\n      returnIndex = length + index;\n\n      if (returnIndex < 0) {\n        return new Dom7([]);\n      }\n\n      return new Dom7([this[returnIndex]]);\n    }\n\n    return new Dom7([this[index]]);\n  }\n\n  function append() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function prepend(newChild) {\n    var i;\n    var j;\n\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n\n    return this;\n  }\n\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n\n      return new Dom7([]);\n    }\n\n    return new Dom7([]);\n  }\n\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n\n    if (!el) {\n      return new Dom7([]);\n    }\n\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(next).is(selector)) {\n          nextEls.push(next);\n        }\n      } else {\n        nextEls.push(next);\n      }\n\n      el = next;\n    }\n\n    return new Dom7(nextEls);\n  }\n\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) {\n        return new Dom7([el.previousElementSibling]);\n      }\n\n      return new Dom7([]);\n    }\n\n    return new Dom7([]);\n  }\n\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n\n    if (!el) {\n      return new Dom7([]);\n    }\n\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(prev).is(selector)) {\n          prevEls.push(prev);\n        }\n      } else {\n        prevEls.push(prev);\n      }\n\n      el = prev;\n    }\n\n    return new Dom7(prevEls);\n  }\n\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) {\n            parents.push(this[i].parentNode);\n          }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n\n    return $(unique(parents));\n  }\n\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) {\n            parents.push(parent);\n          }\n        } else {\n          parents.push(parent);\n        }\n\n        parent = parent.parentNode;\n      }\n    }\n\n    return $(unique(parents));\n  }\n\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n\n    return closest;\n  }\n\n  function find(selector) {\n    var foundElements = [];\n\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n\n    return new Dom7(foundElements);\n  }\n\n  function children(selector) {\n    var children = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) {\n            children.push(childNodes[j]);\n          }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n\n    return new Dom7(unique(children));\n  }\n\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) {\n        this[i].parentNode.removeChild(this[i]);\n      }\n    }\n\n    return this;\n  }\n\n  function add() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var dom = this;\n    var i;\n    var j;\n\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    filter: filter,\n    remove: remove,\n    add: add,\n    styles: styles\n  };\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n  });\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {// no getter for object\n        }\n\n        try {\n          delete object[key];\n        } catch (e) {// something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if (delay === void 0) delay = 0;\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if (axis === void 0) axis = 'x';\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) {\n            return a.replace(',', '.');\n          }).join(', ');\n        } // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n\n\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) {\n          curTransform = transformMatrix.m41;\n        } // Crazy IE10 Matrix\n        else if (matrix.length === 16) {\n            curTransform = parseFloat(matrix[12]);\n          } // Normal Browsers\n          else {\n              curTransform = parseFloat(matrix[4]);\n            }\n      }\n\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) {\n          curTransform = transformMatrix.m42;\n        } // Crazy IE10 Matrix\n        else if (matrix.length === 16) {\n            curTransform = parseFloat(matrix[13]);\n          } // Normal Browsers\n          else {\n              curTransform = parseFloat(matrix[5]);\n            }\n      }\n\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) {\n          return paramsPart !== '';\n        });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n\n      return query;\n    },\n    isObject: function isObject(o) {\n      return _typeof(o) === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [],\n          len$1 = arguments.length;\n\n      while (len$1--) {\n        args[len$1] = arguments[len$1];\n      }\n\n      var to = Object(args[0]);\n\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n\n      return to;\n    }\n  };\n\n  var Support = function Support() {\n    return {\n      touch: win.Modernizr && win.Modernizr.touch === true || function checkTouch() {\n        return !!(win.navigator.maxTouchPoints > 0 || 'ontouchstart' in win || win.DocumentTouch && doc instanceof win.DocumentTouch);\n      }(),\n      pointerEvents: !!win.PointerEvent && 'maxTouchPoints' in win.navigator && win.navigator.maxTouchPoints > 0,\n      observer: function checkObserver() {\n        return 'MutationObserver' in win || 'WebkitMutationObserver' in win;\n      }(),\n      passiveListener: function checkPassiveListener() {\n        var supportsPassive = false;\n\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            }\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {// No support\n        }\n\n        return supportsPassive;\n      }(),\n      gestures: function checkGestures() {\n        return 'ongesturestart' in win;\n      }()\n    };\n  }();\n\n  var SwiperClass = function SwiperClass(params) {\n    if (params === void 0) params = {};\n    var self = this;\n    self.params = params; // Events\n\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = {\n    components: {\n      configurable: true\n    }\n  };\n\n  SwiperClass.prototype.on = function on(events, handler, priority) {\n    var self = this;\n\n    if (typeof handler !== 'function') {\n      return self;\n    }\n\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) {\n        self.eventsListeners[event] = [];\n      }\n\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once(events, handler, priority) {\n    var self = this;\n\n    if (typeof handler !== 'function') {\n      return self;\n    }\n\n    function onceHandler() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      self.off(events, onceHandler);\n\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n\n      handler.apply(self, args);\n    }\n\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off(events, handler) {\n    var self = this;\n\n    if (!self.eventsListeners) {\n      return self;\n    }\n\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler || eventHandler.f7proxy && eventHandler.f7proxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var self = this;\n\n    if (!self.eventsListeners) {\n      return self;\n    }\n\n    var events;\n    var data;\n    var context;\n\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams(instanceParams) {\n    var instance = this;\n\n    if (!instance.modules) {\n      return;\n    }\n\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName]; // Extend params\n\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules(modulesParams) {\n    if (modulesParams === void 0) modulesParams = {};\n    var instance = this;\n\n    if (!instance.modules) {\n      return;\n    }\n\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {}; // Extend instance methods and props\n\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      } // Add event listeners\n\n\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      } // Module create callback\n\n\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n\n    if (!Class.use) {\n      return;\n    }\n\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule(module) {\n    var params = [],\n        len = arguments.length - 1;\n\n    while (len-- > 0) {\n      params[len] = arguments[len + 1];\n    }\n\n    var Class = this;\n\n    if (!Class.prototype.modules) {\n      Class.prototype.modules = {};\n    }\n\n    var name = module.name || Object.keys(Class.prototype.modules).length + \"_\" + Utils.now();\n    Class.prototype.modules[name] = module; // Prototype\n\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    } // Class\n\n\n    if (module[\"static\"]) {\n      Object.keys(module[\"static\"]).forEach(function (key) {\n        Class[key] = module[\"static\"][key];\n      });\n    } // Callback\n\n\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n\n    return Class;\n  };\n\n  SwiperClass.use = function use(module) {\n    var params = [],\n        len = arguments.length - 1;\n\n    while (len-- > 0) {\n      params[len] = arguments[len + 1];\n    }\n\n    var Class = this;\n\n    if (Array.isArray(module)) {\n      module.forEach(function (m) {\n        return Class.installModule(m);\n      });\n      return Class;\n    }\n\n    return Class.installModule.apply(Class, [module].concat(params));\n  };\n\n  Object.defineProperties(SwiperClass, staticAccessors);\n\n  function updateSize() {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n      return;\n    } // Subtract paddings\n\n\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height\n    });\n  }\n\n  function updateSlides() {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    function slidesForMargin(slideIndex) {\n      if (!params.cssMode) {\n        return true;\n      }\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }\n\n    var offsetBefore = params.slidesOffsetBefore;\n\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween; // reset margins\n\n    if (rtl) {\n      slides.css({\n        marginLeft: '',\n        marginTop: ''\n      });\n    } else {\n      slides.css({\n        marginRight: '',\n        marginBottom: ''\n      });\n    }\n\n    var slidesNumberEvenToRows;\n\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    } // Calc slides\n\n\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = void 0;\n        var column = void 0;\n        var row = void 0;\n\n        if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n          var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n          var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n          var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n          slide.css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex\n          });\n        } else if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - column * slidesPerColumn;\n\n          if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n            row += 1;\n\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - row * slidesPerRow;\n        }\n\n        slide.css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n      }\n\n      if (slide.css('display') === 'none') {\n        continue;\n      } // eslint-disable-line\n\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            var width = parseFloat(slideStyles.getPropertyValue('width'));\n            var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n            var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n            var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n            var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n            var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n            }\n          } else {\n            var height = parseFloat(slideStyles.getPropertyValue('height'));\n            var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n            var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n            var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n            var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n            var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n\n            if (boxSizing$1 && boxSizing$1 === 'border-box') {\n              slideSize = height + marginTop + marginBottom;\n            } else {\n              slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n            }\n          }\n        }\n\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n\n        if (params.roundLengths) {\n          slideSize = Math.floor(slideSize);\n        }\n      } else {\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n\n        if (params.roundLengths) {\n          slideSize = Math.floor(slideSize);\n        }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n\n      slidesSizesGrid.push(slideSize);\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n\n        if (prevSlideSize === 0 && i !== 0) {\n          slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        }\n\n        if (i === 0) {\n          slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        }\n\n        if (Math.abs(slidePosition) < 1 / 1000) {\n          slidePosition = 0;\n        }\n\n        if (params.roundLengths) {\n          slidePosition = Math.floor(slidePosition);\n        }\n\n        if (index % params.slidesPerGroup === 0) {\n          snapGrid.push(slidePosition);\n        }\n\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) {\n          slidePosition = Math.floor(slidePosition);\n        }\n\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) {\n          snapGrid.push(slidePosition);\n        }\n\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n      prevSlideSize = slideSize;\n      index += 1;\n    }\n\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({\n        width: swiper.virtualSize + params.spaceBetween + \"px\"\n      });\n    }\n\n    if (params.setWrapperSize) {\n      if (swiper.isHorizontal()) {\n        $wrapperEl.css({\n          width: swiper.virtualSize + params.spaceBetween + \"px\"\n        });\n      } else {\n        $wrapperEl.css({\n          height: swiper.virtualSize + params.spaceBetween + \"px\"\n        });\n      }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n\n      if (swiper.isHorizontal()) {\n        $wrapperEl.css({\n          width: swiper.virtualSize + params.spaceBetween + \"px\"\n        });\n      } else {\n        $wrapperEl.css({\n          height: swiper.virtualSize + params.spaceBetween + \"px\"\n        });\n      }\n\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n\n          if (params.roundLengths) {\n            slidesGridItem = Math.floor(slidesGridItem);\n          }\n\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) {\n            newSlidesGrid.push(slidesGridItem);\n          }\n        }\n\n        snapGrid = newSlidesGrid;\n      }\n    } // Remove last grid elements depending on width\n\n\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n\n        if (params.roundLengths) {\n          slidesGridItem$1 = Math.floor(slidesGridItem$1);\n        }\n\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n\n      snapGrid = newSlidesGrid;\n\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n\n    if (snapGrid.length === 0) {\n      snapGrid = [0];\n    }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) {\n          slides.filter(slidesForMargin).css({\n            marginLeft: spaceBetween + \"px\"\n          });\n        } else {\n          slides.filter(slidesForMargin).css({\n            marginRight: spaceBetween + \"px\"\n          });\n        }\n      } else {\n        slides.filter(slidesForMargin).css({\n          marginBottom: spaceBetween + \"px\"\n        });\n      }\n    }\n\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      var maxSnap = allSlidesSize - swiperSize;\n      snapGrid = snapGrid.map(function (snap) {\n        if (snap < 0) {\n          return -offsetBefore;\n        }\n\n        if (snap > maxSnap) {\n          return maxSnap + offsetAfter;\n        }\n\n        return snap;\n      });\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize$1 = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize$1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize$1 -= params.spaceBetween;\n\n      if (allSlidesSize$1 < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize$1) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      swiper.emit('snapGridLengthChange');\n    }\n\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight(speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    } // Find slides currently in view\n\n\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      if (swiper.params.centeredSlides) {\n        activeSlides.push.apply(activeSlides, swiper.visibleSlides);\n      } else {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n          var index = swiper.activeIndex + i;\n\n          if (index > swiper.slides.length) {\n            break;\n          }\n\n          activeSlides.push(swiper.slides.eq(index)[0]);\n        }\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    } // Find new height from highest slide in view\n\n\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    } // Update Height\n\n\n    if (newHeight) {\n      swiper.$wrapperEl.css('height', newHeight + \"px\");\n    }\n  }\n\n  function updateSlidesOffset() {\n    var swiper = this;\n    var slides = swiper.slides;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress(translate) {\n    if (translate === void 0) translate = this && this.translate || 0;\n    var swiper = this;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) {\n      return;\n    }\n\n    if (typeof slides[0].swiperSlideOffset === 'undefined') {\n      swiper.updateSlidesOffset();\n    }\n\n    var offsetCenter = -translate;\n\n    if (rtl) {\n      offsetCenter = translate;\n    } // Visible Slides\n\n\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n\n      if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress(translate) {\n    var swiper = this;\n\n    if (typeof translate === 'undefined') {\n      var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n      swiper.updateSlidesProgress(translate);\n    }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses() {\n    var swiper = this;\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n    var activeSlide;\n\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    } // Active classes\n\n\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n      }\n    } // Next Slide\n\n\n    var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    } // Prev Slide\n\n\n    var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n      }\n\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex(newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      } // Normalize slideIndex\n\n\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') {\n          activeIndex = 0;\n        }\n      }\n    }\n\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n\n    if (snapIndex >= snapGrid.length) {\n      snapIndex = snapGrid.length - 1;\n    }\n\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n\n      return;\n    } // Get real index\n\n\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n\n    if (swiper.initialized || swiper.runCallbacksOnInit) {\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide(e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n    var slideFound = false;\n\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) {\n          slideFound = true;\n        }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide\n  };\n\n  function getTranslate(axis) {\n    if (axis === void 0) axis = this.isHorizontal() ? 'x' : 'y';\n    var swiper = this;\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    if (params.cssMode) {\n      return translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n\n    if (rtl) {\n      currentTranslate = -currentTranslate;\n    }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate(translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var wrapperEl = swiper.wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n    }\n\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate() {\n    return -this.snapGrid[0];\n  }\n\n  function maxTranslate() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n  }\n\n  function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n    var obj;\n    if (translate === void 0) translate = 0;\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    if (translateBounds === void 0) translateBounds = true;\n    var swiper = this;\n    var params = swiper.params;\n    var wrapperEl = swiper.wrapperEl;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var minTranslate = swiper.minTranslate();\n    var maxTranslate = swiper.maxTranslate();\n    var newTranslate;\n\n    if (translateBounds && translate > minTranslate) {\n      newTranslate = minTranslate;\n    } else if (translateBounds && translate < maxTranslate) {\n      newTranslate = maxTranslate;\n    } else {\n      newTranslate = translate;\n    } // Update progress\n\n\n    swiper.updateProgress(newTranslate);\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          wrapperEl.scrollTo((obj = {}, obj[isH ? 'left' : 'top'] = -newTranslate, obj.behavior = 'smooth', obj));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        }\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionEnd');\n      }\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionStart');\n      }\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) {\n              return;\n            }\n\n            if (e.target !== this) {\n              return;\n            }\n\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.onTranslateToWrapperTransitionEnd = null;\n            delete swiper.onTranslateToWrapperTransitionEnd;\n\n            if (runCallbacks) {\n              swiper.emit('transitionEnd');\n            }\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n    translateTo: translateTo\n  };\n\n  function setTransition(duration, byController) {\n    var swiper = this;\n\n    if (!swiper.params.cssMode) {\n      swiper.$wrapperEl.transition(duration);\n    }\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart(runCallbacks, direction) {\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) {\n        dir = 'next';\n      } else if (activeIndex < previousIndex) {\n        dir = 'prev';\n      } else {\n        dir = 'reset';\n      }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n\n      swiper.emit('slideChangeTransitionStart');\n\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1(runCallbacks, direction) {\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    var params = swiper.params;\n    swiper.animating = false;\n\n    if (params.cssMode) {\n      return;\n    }\n\n    swiper.setTransition(0);\n    var dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) {\n        dir = 'next';\n      } else if (activeIndex < previousIndex) {\n        dir = 'prev';\n      } else {\n        dir = 'reset';\n      }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n\n      swiper.emit('slideChangeTransitionEnd');\n\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1\n  };\n\n  function slideTo(index, speed, runCallbacks, internal) {\n    var obj;\n    if (index === void 0) index = 0;\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var slideIndex = index;\n\n    if (slideIndex < 0) {\n      slideIndex = 0;\n    }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    var wrapperEl = swiper.wrapperEl;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n\n    if (snapIndex >= snapGrid.length) {\n      snapIndex = snapGrid.length - 1;\n    }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex]; // Update progress\n\n    swiper.updateProgress(translate); // Normalize slideIndex\n\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    } // Directions locks\n\n\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) {\n          return false;\n        }\n      }\n    }\n\n    var direction;\n\n    if (slideIndex > activeIndex) {\n      direction = 'next';\n    } else if (slideIndex < activeIndex) {\n      direction = 'prev';\n    } else {\n      direction = 'reset';\n    } // Update Index\n\n\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n      swiper.updateActiveIndex(slideIndex); // Update Height\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n\n      swiper.updateSlidesClasses();\n\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n\n      return false;\n    }\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          wrapperEl.scrollTo((obj = {}, obj[isH ? 'left' : 'top'] = -translate, obj.behavior = 'smooth', obj));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n        }\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) {\n              return;\n            }\n\n            if (e.target !== this) {\n              return;\n            }\n\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop(index, speed, runCallbacks, internal) {\n    if (index === void 0) index = 0;\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var newIndex = index;\n\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n  /* eslint no-unused-vars: \"off\" */\n\n\n  function slideNext(speed, runCallbacks, internal) {\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n\n    if (params.loop) {\n      if (animating) {\n        return false;\n      }\n\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n  }\n  /* eslint no-unused-vars: \"off\" */\n\n\n  function slidePrev(speed, runCallbacks, internal) {\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) {\n        return false;\n      }\n\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n    function normalize(val) {\n      if (val < 0) {\n        return -Math.floor(Math.abs(val));\n      }\n\n      return Math.floor(val);\n    }\n\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) {\n      return normalize(val);\n    });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) {\n      return normalize(val);\n    });\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      snapGrid.forEach(function (snap) {\n        if (!prevSnap && normalizedTranslate >= snap) {\n          prevSnap = snap;\n        }\n      });\n    }\n\n    var prevIndex;\n\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n\n      if (prevIndex < 0) {\n        prevIndex = swiper.activeIndex - 1;\n      }\n    }\n\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n  /* eslint no-unused-vars: \"off\" */\n\n\n  function slideReset(speed, runCallbacks, internal) {\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n  /* eslint no-unused-vars: \"off\" */\n\n\n  function slideToClosest(speed, runCallbacks, internal, threshold) {\n    if (speed === void 0) speed = this.params.speed;\n    if (runCallbacks === void 0) runCallbacks = true;\n    if (threshold === void 0) threshold = 0.5;\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    if (translate >= swiper.snapGrid[snapIndex]) {\n      // The current translate is on or after the current snap index, so the choice\n      // is between the current index and the one after it.\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n        index += swiper.params.slidesPerGroup;\n      }\n    } else {\n      // The current translate is before the current snap index, so the choice\n      // is between the current index and the one before it.\n      var prevSnap = swiper.snapGrid[snapIndex - 1];\n      var currentSnap$1 = swiper.snapGrid[snapIndex];\n\n      if (translate - prevSnap <= (currentSnap$1 - prevSnap) * threshold) {\n        index -= swiper.params.slidesPerGroup;\n      }\n    }\n\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide() {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n\n    if (params.loop) {\n      if (swiper.animating) {\n        return;\n      }\n\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n      if (params.centeredSlides) {\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide\n  };\n\n  function loopCreate() {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides\n\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n    var slides = $wrapperEl.children(\".\" + params.slideClass);\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\n          $wrapperEl.append(blankNode);\n        }\n\n        slides = $wrapperEl.children(\".\" + params.slideClass);\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) {\n      params.loopedSlides = slides.length;\n    }\n\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n    swiper.loopedSlides += params.loopAdditionalSlides;\n\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n\n      if (index < swiper.loopedSlides) {\n        appendSlides.push(el);\n      }\n\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n        prependSlides.push(el);\n      }\n\n      slide.attr('data-swiper-slide-index', index);\n    });\n\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix() {\n    var swiper = this;\n    swiper.emit('beforeLoopFix');\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n    if (activeIndex < loopedSlides) {\n      newIndex = slides.length - loopedSlides * 3 + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if (activeIndex >= slides.length - loopedSlides) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n  }\n\n  function loopDestroy() {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy\n  };\n\n  function setGrabCursor(moving) {\n    var swiper = this;\n\n    if (Support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n      return;\n    }\n\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor() {\n    var swiper = this;\n\n    if (Support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n      return;\n    }\n\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor\n  };\n\n  function appendSlide(slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    if (_typeof(slides) === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) {\n          $wrapperEl.append(slides[i]);\n        }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide(slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    var newActiveIndex = activeIndex + 1;\n\n    if (_typeof(slides) === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) {\n          $wrapperEl.prepend(slides[i]);\n        }\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide(index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n\n    var baseLength = swiper.slides.length;\n\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n    var slidesBuffer = [];\n\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (_typeof(slides) === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) {\n          $wrapperEl.append(slides[i$1]);\n        }\n      }\n\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide(slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (_typeof(slidesIndexes) === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n\n        if (swiper.slides[indexToRemove]) {\n          swiper.slides.eq(indexToRemove).remove();\n        }\n\n        if (indexToRemove < newActiveIndex) {\n          newActiveIndex -= 1;\n        }\n      }\n\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n\n      if (swiper.slides[indexToRemove]) {\n        swiper.slides.eq(indexToRemove).remove();\n      }\n\n      if (indexToRemove < newActiveIndex) {\n        newActiveIndex -= 1;\n      }\n\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides() {\n    var swiper = this;\n    var slidesIndexes = [];\n\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides\n  };\n\n  var Device = function Device() {\n    var platform = win.navigator.platform;\n    var ua = win.navigator.userAgent;\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      edge: false,\n      ie: false,\n      firefox: false,\n      macos: false,\n      windows: false,\n      cordova: !!(win.cordova || win.phonegap),\n      phonegap: !!(win.cordova || win.phonegap),\n      electron: false\n    };\n    var screenWidth = win.screen.width;\n    var screenHeight = win.screen.height;\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    var ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n    var edge = ua.indexOf('Edge/') >= 0;\n    var firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n    var windows = platform === 'Win32';\n    var electron = ua.toLowerCase().indexOf('electron') >= 0;\n    var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n    if (!ipad && macos && Support.touch && (screenWidth === 1024 && screenHeight === 1366 || // Pro 12.9\n    screenWidth === 834 && screenHeight === 1194 // Pro 11\n    || screenWidth === 834 && screenHeight === 1112 // Pro 10.5\n    || screenWidth === 768 && screenHeight === 1024 // other\n    )) {\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\n      macos = false;\n    }\n\n    device.ie = ie;\n    device.edge = edge;\n    device.firefox = firefox; // Android\n\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    } // iOS\n\n\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.ipod = true;\n    } // iOS 8+ changed UA\n\n\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    } // Webview\n\n\n    device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || win.navigator.standalone)) || win.matchMedia && win.matchMedia('(display-mode: standalone)').matches;\n    device.webview = device.webView;\n    device.standalone = device.webView; // Desktop\n\n    device.desktop = !(device.ios || device.android) || electron;\n\n    if (device.desktop) {\n      device.electron = electron;\n      device.macos = macos;\n      device.windows = windows;\n\n      if (device.macos) {\n        device.os = 'macos';\n      }\n\n      if (device.windows) {\n        device.os = 'windows';\n      }\n    } // Pixel Ratio\n\n\n    device.pixelRatio = win.devicePixelRatio || 1; // Export object\n\n    return device;\n  }();\n\n  function onTouchStart(event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n\n    var e = event;\n\n    if (e.originalEvent) {\n      e = e.originalEvent;\n    }\n\n    var $targetEl = $(e.target);\n\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!$targetEl.closest(swiper.wrapperEl).length) {\n        return;\n      }\n    }\n\n    data.isTouchEvent = e.type === 'touchstart';\n\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) {\n      return;\n    }\n\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) {\n      return;\n    }\n\n    if (data.isTouched && data.isMoved) {\n      return;\n    }\n\n    if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n\n    if (params.swipeHandler) {\n      if (!$targetEl.closest(params.swipeHandler)[0]) {\n        return;\n      }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= win.screen.width - edgeSwipeThreshold)) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n\n    if (params.threshold > 0) {\n      data.allowThresholdMove = false;\n    }\n\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n\n      if ($targetEl.is(data.formElements)) {\n        preventDefault = false;\n      }\n\n      if (doc.activeElement && $(doc.activeElement).is(data.formElements) && doc.activeElement !== $targetEl[0]) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove(event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n\n    if (e.originalEvent) {\n      e = e.originalEvent;\n    }\n\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && e.type === 'mousemove') {\n      return;\n    }\n\n    var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n    var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY\n        });\n        data.touchStartTime = Utils.now();\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n        return;\n      }\n    }\n\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n\n    if (e.targetTouches && e.targetTouches.length > 1) {\n      return;\n    }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n\n    if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) {\n      return;\n    }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n      }\n    }\n\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n\n    if (!data.startMoving) {\n      return;\n    }\n\n    swiper.allowClick = false;\n\n    if (!params.cssMode) {\n      e.preventDefault();\n    }\n\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n\n      data.allowMomentumBounce = false; // Grab Cursor\n\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n\n      swiper.emit('sliderFirstMove', e);\n    }\n\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n\n    if (rtl) {\n      diff = -diff;\n    }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n      }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n      }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    } // Directions locks\n\n\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    } // Threshold\n\n\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger || params.cssMode) {\n      return;\n    } // Update active index in free mode\n\n\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime\n        });\n      }\n\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now()\n      });\n    } // Update progress\n\n\n    swiper.updateProgress(data.currentTranslate); // Update translate\n\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd(event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n\n    if (e.originalEvent) {\n      e = e.originalEvent;\n    }\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n\n    data.allowTouchCallbacks = false;\n\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    } // Return Grab Cursor\n\n\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    } // Time diff\n\n\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap click', e);\n\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) {\n        swiper.allowClick = true;\n      }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    var currentPos;\n\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          } // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n\n\n          if (time > 150 || Utils.now() - lastMoveEvent.time > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n        var newPosition = swiper.translate + momentumDistance;\n\n        if (rtl) {\n          newPosition = -newPosition;\n        }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) {\n            needsLoopFix = true;\n          }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) {\n            needsLoopFix = true;\n          }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n\n          newPosition = -newPosition;\n        }\n\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        } // Fix duration\n\n\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n\n          if (params.freeModeSticky) {\n            // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n            // It's easy to see this when simulating touch with mouse events. To fix this,\n            // limit single-slide swipes to the default slide duration. This also has the\n            // nice side effect of matching slide speed if the user stopped moving before\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n            // For faster swipes, also apply limits (albeit higher ones).\n            var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n            var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n            if (moveDistance < currentSlideSize) {\n              momentumDuration = params.speed;\n            } else if (moveDistance < 2 * currentSlideSize) {\n              momentumDuration = params.speed * 1.5;\n            } else {\n              momentumDuration = params.speed * 2.5;\n            }\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) {\n              return;\n            }\n\n            swiper.emit('momentumBounce');\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) {\n                return;\n              }\n\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) {\n                return;\n              }\n\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      return;\n    } // Find current slide\n\n\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n\n    for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n      var increment$1 = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n      if (typeof slidesGrid[i + increment$1] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment$1]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + increment$1] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    } // Find current slide size\n\n\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) {\n          swiper.slideTo(stopIndex + increment);\n        } else {\n          swiper.slideTo(stopIndex);\n        }\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > 1 - params.longSwipesRatio) {\n          swiper.slideTo(stopIndex + increment);\n        } else {\n          swiper.slideTo(stopIndex);\n        }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n      if (!isNavButtonTarget) {\n        if (swiper.swipeDirection === 'next') {\n          swiper.slideTo(stopIndex + increment);\n        }\n\n        if (swiper.swipeDirection === 'prev') {\n          swiper.slideTo(stopIndex);\n        }\n      } else if (e.target === swiper.navigation.nextEl) {\n        swiper.slideTo(stopIndex + increment);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize() {\n    var swiper = this;\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) {\n      return;\n    } // Breakpoints\n\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Save locks\n\n\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid; // Disable locks on resize\n\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n    } // Return locks after resize\n\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick(e) {\n    var swiper = this;\n\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) {\n        e.preventDefault();\n      }\n\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll() {\n    var swiper = this;\n    var wrapperEl = swiper.wrapperEl;\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop; // eslint-disable-next-line\n\n    if (swiper.translate === -0) {\n      swiper.translate = 0;\n    }\n\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(swiper.translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  var dummyEventAttached = false;\n\n  function dummyEventListener() {}\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n    var capture = !!params.nested; // Touch Events\n\n    if (!Support.touch && Support.pointerEvents) {\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? {\n          passive: false,\n          capture: capture\n        } : capture);\n        el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n\n        if (!dummyEventAttached) {\n          doc.addEventListener('touchstart', dummyEventListener);\n          dummyEventAttached = true;\n        }\n      }\n\n      if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {\n        el.addEventListener('mousedown', swiper.onTouchStart, false);\n        doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n        doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.addEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.addEventListener('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    if (params.updateOnWindowResize) {\n      swiper.on(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n    } else {\n      swiper.on('observerUpdate', onResize, true);\n    }\n  }\n\n  function detachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n    var capture = !!params.nested; // Touch Events\n\n    if (!Support.touch && Support.pointerEvents) {\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n      }\n\n      if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {\n        el.removeEventListener('mousedown', swiper.onTouchStart, false);\n        doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.removeEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.removeEventListener('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    swiper.off(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents\n  };\n\n  function setBreakpoint() {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides;\n    if (loopedSlides === void 0) loopedSlides = 0;\n    var params = swiper.params;\n    var $el = swiper.$el;\n    var breakpoints = params.breakpoints;\n\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) {\n      return;\n    } // Get breakpoint for window width and update parameters\n\n\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n\n          if (typeof paramValue === 'undefined') {\n            return;\n          }\n\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var wasMultiRow = params.slidesPerColumn > 1;\n      var isMultiRow = breakpointParams.slidesPerColumn > 1;\n\n      if (wasMultiRow && !isMultiRow) {\n        $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n      } else if (!wasMultiRow && isMultiRow) {\n        $el.addClass(params.containerModifierClass + \"multirow\");\n\n        if (breakpointParams.slidesPerColumnFill === 'column') {\n          $el.addClass(params.containerModifierClass + \"multirow-column\");\n        }\n      }\n\n      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      Utils.extend(swiper.params, breakpointParams);\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev\n      });\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint(breakpoints) {\n    // Get breakpoint for window width\n    if (!breakpoints) {\n      return undefined;\n    }\n\n    var breakpoint = false;\n    var points = Object.keys(breakpoints).map(function (point) {\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\n        var minRatio = parseFloat(point.substr(1));\n        var value = win.innerHeight * minRatio;\n        return {\n          value: value,\n          point: point\n        };\n      }\n\n      return {\n        value: point,\n        point: point\n      };\n    });\n    points.sort(function (a, b) {\n      return parseInt(a.value, 10) - parseInt(b.value, 10);\n    });\n\n    for (var i = 0; i < points.length; i += 1) {\n      var ref = points[i];\n      var point = ref.point;\n      var value = ref.value;\n\n      if (value <= win.innerWidth) {\n        breakpoint = point;\n      }\n    }\n\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = {\n    setBreakpoint: setBreakpoint,\n    getBreakpoint: getBreakpoint\n  };\n\n  function addClasses() {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n    suffixes.push('initialized');\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n\n      if (params.slidesPerColumnFill === 'column') {\n        suffixes.push('multirow-column');\n      }\n    }\n\n    if (Device.android) {\n      suffixes.push('android');\n    }\n\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n\n    if (params.cssMode) {\n      suffixes.push('css-mode');\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses() {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = {\n    addClasses: addClasses,\n    removeClasses: removeClasses\n  };\n\n  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n\n    function onReady() {\n      if (callback) {\n        callback();\n      }\n    }\n\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n\n        if (sizes) {\n          image.sizes = sizes;\n        }\n\n        if (srcset) {\n          image.srcset = srcset;\n        }\n\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages() {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) {\n        return;\n      }\n\n      if (swiper.imagesLoaded !== undefined) {\n        swiper.imagesLoaded += 1;\n      }\n\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) {\n          swiper.update();\n        }\n\n        swiper.emit('imagesReady');\n      }\n    }\n\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var params = swiper.params;\n    var wasLocked = swiper.isLocked;\n    var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\n\n    if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n      swiper.isLocked = lastSlidePosition <= swiper.size;\n    } else {\n      swiper.isLocked = swiper.snapGrid.length === 1;\n    }\n\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked; // events\n\n    if (wasLocked !== swiper.isLocked) {\n      swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n    }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = {\n    checkOverflow: checkOverflow\n  };\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    //\n    preventInteractionOnTransition: false,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n    // Breakpoints\n    breakpoints: undefined,\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    // NS\n    containerModifierClass: 'swiper-container-',\n    // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n    // Callbacks\n    runCallbacksOnInit: true\n  };\n  /* eslint no-param-reassign: \"off\" */\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images\n  };\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/function (SwiperClass) {\n    function Swiper() {\n      var assign;\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      var el;\n      var params;\n\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        assign = args, el = assign[0], params = assign[1];\n      }\n\n      if (!params) {\n        params = {};\n      }\n\n      params = Utils.extend({}, params);\n\n      if (el && !params.el) {\n        params.el = el;\n      }\n\n      SwiperClass.call(this, params);\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      }); // Swiper Instance\n\n      var swiper = this;\n\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n\n          if (_typeof(moduleParams) !== 'object' || moduleParams === null) {\n            return;\n          }\n\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n            return;\n          }\n\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = {\n              enabled: true\n            };\n          }\n\n          if (_typeof(params[moduleParamName]) === 'object' && !('enabled' in params[moduleParamName])) {\n            params[moduleParamName].enabled = true;\n          }\n\n          if (!params[moduleParamName]) {\n            params[moduleParamName] = {\n              enabled: false\n            };\n          }\n        }\n      }); // Extend defaults with modules params\n\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams); // Extend defaults with passed params\n\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params); // Save Dom lib\n\n      swiper.$ = $; // Find el\n\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, {\n            el: containerEl\n          });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper); // Find Wrapper\n\n      var $wrapperEl;\n\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        $wrapperEl = $(el.shadowRoot.querySelector(\".\" + swiper.params.wrapperClass)); // Children needs to return slot items\n\n        $wrapperEl.children = function (options) {\n          return $el.children(options);\n        };\n      } else {\n        $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\n      } // Extend Swiper\n\n\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n        // Classes\n        classNames: [],\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n        //\n        isBeginning: true,\n        isEnd: false,\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n        // Touch Events\n        touchEvents: function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          }\n\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n            cancel: touch[3]\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2]\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }(),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video, label',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined\n        },\n        // Clicks\n        allowClick: true,\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0\n        },\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0\n      }); // Install Modules\n\n      swiper.useModules(); // Init\n\n      if (swiper.params.init) {\n        swiper.init();\n      } // Return app instance\n\n\n      return swiper;\n    }\n\n    if (SwiperClass) Swiper.__proto__ = SwiperClass;\n    Swiper.prototype = Object.create(SwiperClass && SwiperClass.prototype);\n    Swiper.prototype.constructor = Swiper;\n    var staticAccessors = {\n      extendedDefaults: {\n        configurable: true\n      },\n      defaults: {\n        configurable: true\n      },\n      Class: {\n        configurable: true\n      },\n      $: {\n        configurable: true\n      }\n    };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic() {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n\n            if (slideSize > swiperSize) {\n              breakLoop = true;\n            }\n          }\n        }\n\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n\n            if (slideSize > swiperSize) {\n              breakLoop = true;\n            }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n\n      return spv;\n    };\n\n    Swiper.prototype.update = function update() {\n      var swiper = this;\n\n      if (!swiper || swiper.destroyed) {\n        return;\n      }\n\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params; // Breakpoints\n\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      var translated;\n\n      if (swiper.params.freeMode) {\n        setTranslate();\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n\n        if (!translated) {\n          setTranslate();\n        }\n      }\n\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.changeDirection = function changeDirection(newDirection, needUpdate) {\n      if (needUpdate === void 0) needUpdate = true;\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n        return swiper;\n      }\n\n      swiper.$el.removeClass(\"\" + swiper.params.containerModifierClass + currentDirection).addClass(\"\" + swiper.params.containerModifierClass + newDirection);\n      swiper.params.direction = newDirection;\n      swiper.slides.each(function (slideIndex, slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n      swiper.emit('changeDirection');\n\n      if (needUpdate) {\n        swiper.update();\n      }\n\n      return swiper;\n    };\n\n    Swiper.prototype.init = function init() {\n      var swiper = this;\n\n      if (swiper.initialized) {\n        return;\n      }\n\n      swiper.emit('beforeInit'); // Set breakpoint\n\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      } // Add Classes\n\n\n      swiper.addClasses(); // Create loop\n\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      } // Update size\n\n\n      swiper.updateSize(); // Update slides\n\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      } // Set Grab Cursor\n\n\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      } // Slide To Initial Slide\n\n\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      } // Attach events\n\n\n      swiper.attachEvents(); // Init Flag\n\n      swiper.initialized = true; // Emit\n\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy(deleteInstance, cleanStyles) {\n      if (deleteInstance === void 0) deleteInstance = true;\n      if (cleanStyles === void 0) cleanStyles = true;\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy'); // Init Flag\n\n      swiper.initialized = false; // Detach events\n\n      swiper.detachEvents(); // Destroy loop\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      } // Cleanup styles\n\n\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n\n        if (slides && slides.length) {\n          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n        }\n      }\n\n      swiper.emit('destroy'); // Detach emitter events\n\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n\n      swiper.destroyed = true;\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults(newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties(Swiper, staticAccessors);\n    return Swiper;\n  }(SwiperClass);\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device\n    },\n    \"static\": {\n      device: Device\n    }\n  };\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support\n    },\n    \"static\": {\n      support: Support\n    }\n  };\n\n  var Browser = function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n    }\n\n    return {\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent)\n    };\n  }();\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser\n    },\n    \"static\": {\n      browser: Browser\n    }\n  };\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) {\n              return;\n            }\n\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) {\n              return;\n            }\n\n            swiper.emit('orientationchange');\n          }\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this; // Emit resize\n\n        win.addEventListener('resize', swiper.resize.resizeHandler); // Emit orientationchange\n\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      }\n    }\n  };\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if (options === void 0) options = {};\n      var swiper = this;\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n      });\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n\n      if (!Support.observer || !swiper.params.observer) {\n        return;\n      }\n\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      } // Observe container\n\n\n      swiper.observer.attach(swiper.$el[0], {\n        childList: swiper.params.observeSlideChildren\n      }); // Observe wrapper\n\n      swiper.observer.attach(swiper.$wrapperEl[0], {\n        attributes: false\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    }\n  };\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: []\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      }\n    }\n  };\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.params.virtual;\n      var addSlidesBefore = ref$1.addSlidesBefore;\n      var addSlidesAfter = ref$1.addSlidesAfter;\n      var ref$2 = swiper.virtual;\n      var previousFrom = ref$2.from;\n      var previousTo = ref$2.to;\n      var slides = ref$2.slides;\n      var previousSlidesGrid = ref$2.slidesGrid;\n      var renderSlide = ref$2.renderSlide;\n      var previousOffset = ref$2.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n      var offsetProp;\n\n      if (swiper.rtlTranslate) {\n        offsetProp = 'right';\n      } else {\n        offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n      }\n\n      var slidesAfter;\n      var slidesBefore;\n\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n        slidesBefore = slidesPerGroup + addSlidesAfter;\n      }\n\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, offset + \"px\");\n        }\n\n        swiper.updateProgress();\n        return;\n      }\n\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: function getSlides() {\n            var slidesToRender = [];\n\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n\n            return slidesToRender;\n          }()\n        });\n        onRendered();\n        return;\n      }\n\n      var prependIndexes = [];\n      var appendIndexes = [];\n\n      if (force) {\n        swiper.$wrapperEl.find(\".\" + swiper.params.slideClass).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\").remove();\n          }\n        }\n      }\n\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) {\n              appendIndexes.push(i$1);\n            }\n\n            if (i$1 < previousFrom) {\n              prependIndexes.push(i$1);\n            }\n          }\n        }\n      }\n\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) {\n        return b - a;\n      }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, offset + \"px\");\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n\n      var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(\"<div class=\\\"\" + swiper.params.slideClass + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\");\n\n      if (!$slideEl.attr('data-swiper-slide-index')) {\n        $slideEl.attr('data-swiper-slide-index', index);\n      }\n\n      if (params.cache) {\n        swiper.virtual.cache[index] = $slideEl;\n      }\n\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slides) {\n      var swiper = this;\n\n      if (_typeof(slides) === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) {\n            swiper.virtual.slides.push(slides[i]);\n          }\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slides) {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var newActiveIndex = activeIndex + 1;\n      var numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) {\n            swiper.virtual.slides.unshift(slides[i]);\n          }\n        }\n\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          var $cachedEl = cache[cachedIndex];\n          var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n          if (cachedElIndex) {\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n          }\n\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n        });\n        swiper.virtual.cache = newCache;\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    },\n    removeSlide: function removeSlide(slidesIndexes) {\n      var swiper = this;\n\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) {\n        return;\n      }\n\n      var activeIndex = swiper.activeIndex;\n\n      if (Array.isArray(slidesIndexes)) {\n        for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n\n          if (slidesIndexes[i] < activeIndex) {\n            activeIndex -= 1;\n          }\n\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n\n        if (slidesIndexes < activeIndex) {\n          activeIndex -= 1;\n        }\n\n        activeIndex = Math.max(activeIndex, 0);\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(activeIndex, 0);\n    },\n    removeAllSlides: function removeAllSlides() {\n      var swiper = this;\n      swiper.virtual.slides = [];\n\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(0, 0);\n    }\n  };\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          removeSlide: Virtual.removeSlide.bind(swiper),\n          removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {}\n        }\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n\n        if (!swiper.params.virtual.enabled) {\n          return;\n        }\n\n        swiper.classNames.push(swiper.params.containerModifierClass + \"virtual\");\n        var overwriteParams = {\n          watchSlidesProgress: true\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n\n        if (!swiper.params.virtual.enabled) {\n          return;\n        }\n\n        swiper.virtual.update();\n      }\n    }\n  };\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      } // jquery fix\n\n\n      var kc = e.keyCode || e.charCode; // Directions locks\n\n      if (!swiper.allowSlideNext && (swiper.isHorizontal() && kc === 39 || swiper.isVertical() && kc === 40 || kc === 34)) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && kc === 37 || swiper.isVertical() && kc === 38 || kc === 33)) {\n        return false;\n      }\n\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n\n      if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false; // Check that swiper should be inside of visible area of window\n\n        if (swiper.$el.parents(\".\" + swiper.params.slideClass).length > 0 && swiper.$el.parents(\".\" + swiper.params.slideActiveClass).length === 0) {\n          return undefined;\n        }\n\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n\n        if (rtl) {\n          swiperOffset.left -= swiper.$el[0].scrollLeft;\n        }\n\n        var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n\n          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n            inView = true;\n          }\n        }\n\n        if (!inView) {\n          return undefined;\n        }\n      }\n\n      if (swiper.isHorizontal()) {\n        if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n          if (e.preventDefault) {\n            e.preventDefault();\n          } else {\n            e.returnValue = false;\n          }\n        }\n\n        if ((kc === 34 || kc === 39) && !rtl || (kc === 33 || kc === 37) && rtl) {\n          swiper.slideNext();\n        }\n\n        if ((kc === 33 || kc === 37) && !rtl || (kc === 34 || kc === 39) && rtl) {\n          swiper.slidePrev();\n        }\n      } else {\n        if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n          if (e.preventDefault) {\n            e.preventDefault();\n          } else {\n            e.returnValue = false;\n          }\n        }\n\n        if (kc === 34 || kc === 40) {\n          swiper.slideNext();\n        }\n\n        if (kc === 33 || kc === 38) {\n          swiper.slidePrev();\n        }\n      }\n\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n\n      if (swiper.keyboard.enabled) {\n        return;\n      }\n\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n\n      if (!swiper.keyboard.enabled) {\n        return;\n      }\n\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    }\n  };\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper)\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      }\n    }\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported && doc.implementation && doc.implementation.hasFeature // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && doc.implementation.hasFeature('', '') !== true) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    lastEventBeforeSnap: undefined,\n    recentWheelEvents: [],\n    event: function event() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) {\n        return 'DOMMouseScroll';\n      }\n\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    },\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n      // Legacy\n\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      } // side scrolling on FF with DOMMouseScroll\n\n\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if (e.shiftKey && !pX) {\n        // if user scrolls with shift he wants horizontal scroll\n        pX = pY;\n        pY = 0;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) {\n          // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else {\n          // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      } // Fall-back if spin cannot be determined\n\n\n      if (pX && !sX) {\n        sX = pX < 1 ? -1 : 1;\n      }\n\n      if (pY && !sY) {\n        sY = pY < 1 ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (swiper.params.cssMode) {\n        e.preventDefault();\n      }\n\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n\n      if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) {\n        return true;\n      }\n\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      } // jquery fix\n\n\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) {\n            delta = data.pixelX * rtlFactor;\n          } else {\n            return true;\n          }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) {\n          delta = data.pixelY;\n        } else {\n          return true;\n        }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) {\n        return true;\n      }\n\n      if (params.invert) {\n        delta = -delta;\n      }\n\n      if (!swiper.params.freeMode) {\n        // Register the new event in a variable which stores the relevant data\n        var newEvent = {\n          time: Utils.now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta),\n          raw: event\n        }; // Keep the most recent events\n\n        var recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n\n        if (recentWheelEvents.length >= 2) {\n          recentWheelEvents.shift(); // only store the last N events\n        }\n\n        var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n        recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n        //   If direction has changed or\n        //   if the scroll is quicker than the previous one:\n        //     Animate the slider.\n        // Else (this is the first time the wheel is moved):\n        //     Animate the slider.\n\n        if (prevEvent) {\n          if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n            swiper.mousewheel.animateSlider(newEvent);\n          }\n        } else {\n          swiper.mousewheel.animateSlider(newEvent);\n        } // If it's time to release the scroll:\n        //   Return now so you don't hit the preventDefault.\n\n\n        if (swiper.mousewheel.releaseScroll(newEvent)) {\n          return true;\n        }\n      } else {\n        // Freemode or scrollContainer:\n        // If we recently snapped after a momentum scroll, then ignore wheel events\n        // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n        // or if it's a new scroll (larger delta or inverse sign as last event before\n        // an end-of-momentum snap).\n        var newEvent$1 = {\n          time: Utils.now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta)\n        };\n        var ref = swiper.mousewheel;\n        var lastEventBeforeSnap = ref.lastEventBeforeSnap;\n        var ignoreWheelEvents = lastEventBeforeSnap && newEvent$1.time < lastEventBeforeSnap.time + 500 && newEvent$1.delta <= lastEventBeforeSnap.delta && newEvent$1.direction === lastEventBeforeSnap.direction;\n\n        if (!ignoreWheelEvents) {\n          swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n          if (swiper.params.loop) {\n            swiper.loopFix();\n          }\n\n          var position = swiper.getTranslate() + delta * params.sensitivity;\n          var wasBeginning = swiper.isBeginning;\n          var wasEnd = swiper.isEnd;\n\n          if (position >= swiper.minTranslate()) {\n            position = swiper.minTranslate();\n          }\n\n          if (position <= swiper.maxTranslate()) {\n            position = swiper.maxTranslate();\n          }\n\n          swiper.setTransition(0);\n          swiper.setTranslate(position);\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n\n          if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n            swiper.updateSlidesClasses();\n          }\n\n          if (swiper.params.freeModeSticky) {\n            // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n            // the end of a momentum scroll by storing recent (N=15?) wheel events.\n            // 1. do all N events have decreasing or same (absolute value) delta?\n            // 2. did all N events arrive in the last M (M=500?) msecs?\n            // 3. does the earliest event have an (absolute value) delta that's\n            //    at least P (P=1?) larger than the most recent event's delta?\n            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n            // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n            // Snap immediately and ignore remaining wheel events in this scroll.\n            // See comment above for \"remaining wheel events in this scroll\" determination.\n            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n            clearTimeout(swiper.mousewheel.timeout);\n            swiper.mousewheel.timeout = undefined;\n            var recentWheelEvents$1 = swiper.mousewheel.recentWheelEvents;\n\n            if (recentWheelEvents$1.length >= 15) {\n              recentWheelEvents$1.shift(); // only store the last N events\n            }\n\n            var prevEvent$1 = recentWheelEvents$1.length ? recentWheelEvents$1[recentWheelEvents$1.length - 1] : undefined;\n            var firstEvent = recentWheelEvents$1[0];\n            recentWheelEvents$1.push(newEvent$1);\n\n            if (prevEvent$1 && (newEvent$1.delta > prevEvent$1.delta || newEvent$1.direction !== prevEvent$1.direction)) {\n              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n              recentWheelEvents$1.splice(0);\n            } else if (recentWheelEvents$1.length >= 15 && newEvent$1.time - firstEvent.time < 500 && firstEvent.delta - newEvent$1.delta >= 1 && newEvent$1.delta <= 6) {\n              // We're at the end of the deceleration of a momentum scroll, so there's no need\n              // to wait for more events. Snap ASAP on the next tick.\n              // Also, because there's some remaining momentum we'll bias the snap in the\n              // direction of the ongoing scroll because it's better UX for the scroll to snap\n              // in the same direction as the scroll instead of reversing to snap.  Therefore,\n              // if it's already scrolled more than 20% in the current direction, keep going.\n              var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent$1;\n              recentWheelEvents$1.splice(0);\n              swiper.mousewheel.timeout = Utils.nextTick(function () {\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 0); // no delay; move on next tick\n            }\n\n            if (!swiper.mousewheel.timeout) {\n              // if we get here, then we haven't detected the end of a momentum scroll, so\n              // we'll consider a scroll \"complete\" when there haven't been any wheel events\n              // for 500ms.\n              swiper.mousewheel.timeout = Utils.nextTick(function () {\n                var snapToThreshold = 0.5;\n                swiper.mousewheel.lastEventBeforeSnap = newEvent$1;\n                recentWheelEvents$1.splice(0);\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 500);\n            }\n          } // Emit event\n\n\n          if (!ignoreWheelEvents) {\n            swiper.emit('scroll', e);\n          } // Stop autoplay\n\n\n          if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) {\n            swiper.autoplay.stop();\n          } // Return page scroll on edge positions\n\n\n          if (position === swiper.minTranslate() || position === swiper.maxTranslate()) {\n            return true;\n          }\n        }\n      }\n\n      if (e.preventDefault) {\n        e.preventDefault();\n      } else {\n        e.returnValue = false;\n      }\n\n      return false;\n    },\n    animateSlider: function animateSlider(newEvent) {\n      var swiper = this; // If the movement is NOT big enough and\n      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n      //   Don't go any further (avoid insignificant scroll movement).\n\n      if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n        // Return false as a default\n        return true;\n      } // If user is scrolling towards the end:\n      //   If the slider hasn't hit the latest slide or\n      //   if the slider is a loop and\n      //   if the slider isn't moving right now:\n      //     Go to next slide and\n      //     emit a scroll event.\n      // Else (the user is scrolling towards the beginning) and\n      // if the slider hasn't hit the first slide or\n      // if the slider is a loop and\n      // if the slider isn't moving right now:\n      //   Go to prev slide and\n      //   emit a scroll event.\n\n\n      if (newEvent.direction < 0) {\n        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n          swiper.slideNext();\n          swiper.emit('scroll', newEvent.raw);\n        }\n      } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n        swiper.slidePrev();\n        swiper.emit('scroll', newEvent.raw);\n      } // If you got here is because an animation has been triggered so store the current time\n\n\n      swiper.mousewheel.lastScrollTime = new win.Date().getTime(); // Return false as a default\n\n      return false;\n    },\n    releaseScroll: function releaseScroll(newEvent) {\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (newEvent.direction < 0) {\n        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n      } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n\n      if (!event) {\n        return false;\n      }\n\n      if (swiper.mousewheel.enabled) {\n        return false;\n      }\n\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n\n      if (!event) {\n        return false;\n      }\n\n      if (!swiper.mousewheel.enabled) {\n        return false;\n      }\n\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n\n      target.off(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    }\n  };\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          animateSlider: Mousewheel.animateSlider.bind(swiper),\n          releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n          lastScrollTime: Utils.now(),\n          lastEventBeforeSnap: undefined,\n          recentWheelEvents: []\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n          swiper.mousewheel.disable();\n        }\n\n        if (swiper.params.mousewheel.enabled) {\n          swiper.mousewheel.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (swiper.params.cssMode) {\n          swiper.mousewheel.enable();\n        }\n\n        if (swiper.mousewheel.enabled) {\n          swiper.mousewheel.disable();\n        }\n      }\n    }\n  };\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) {\n        return;\n      }\n\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n\n      if (swiper.isBeginning && !swiper.params.loop) {\n        return;\n      }\n\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n\n      if (swiper.isEnd && !swiper.params.loop) {\n        return;\n      }\n\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (!(params.nextEl || params.prevEl)) {\n        return;\n      }\n\n      var $nextEl;\n      var $prevEl;\n\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n\n        if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n\n        if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0]\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    }\n  };\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper)\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n\n        if (swiper.params.navigation.hideOnClick && !$(e.target).is($prevEl) && !$(e.target).is($nextEl)) {\n          var isHidden;\n\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if (isHidden === true) {\n            swiper.emit('navigationShow', swiper);\n          } else {\n            swiper.emit('navigationHide', swiper);\n          }\n\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      }\n    }\n  };\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n        return;\n      }\n\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el; // Current/Total\n\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n          current -= slidesLength - swiper.loopedSlides * 2;\n        }\n\n        if (current > total - 1) {\n          current -= total;\n        }\n\n        if (current < 0 && swiper.params.paginationType !== 'bullets') {\n          current = total + current;\n        }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      } // Types\n\n\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\n\n            if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n\n        bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(params.bulletActiveClass + \"-main\");\n              }\n\n              if (bulletIndex === firstIndex) {\n                $bullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n              }\n\n              if (bulletIndex === lastIndex) {\n                $bullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          var bulletIndex = $bullet.index();\n          $bullet.addClass(params.bulletActiveClass);\n\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n            }\n\n            if (swiper.params.loop) {\n              if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                for (var i$1 = params.dynamicMainBullets; i$1 >= 0; i$1 -= 1) {\n                  bullets.eq(bullets.length - i$1).addClass(params.bulletActiveClass + \"-main\");\n                }\n\n                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(params.bulletActiveClass + \"-prev\");\n              } else {\n                $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            } else {\n              $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n              $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n            }\n          }\n        }\n\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\n        }\n      }\n\n      if (params.type === 'fraction') {\n        $el.find(\".\" + params.currentClass).text(params.formatFractionCurrent(current + 1));\n        $el.find(\".\" + params.totalClass).text(params.formatFractionTotal(total));\n      }\n\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n\n        $el.find(\".\" + params.progressbarFillClass).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n      }\n\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n        return;\n      }\n\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\n          }\n        }\n\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find(\".\" + params.bulletClass);\n      }\n\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\" + ' / ' + \"<span class=\\\"\" + params.totalClass + \"\\\"></span>\";\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n\n      if (!params.el) {\n        return;\n      }\n\n      var $el = $(params.el);\n\n      if ($el.length === 0) {\n        return;\n      }\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && swiper.$el.find(params.el).length === 1) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n        swiper.pagination.dynamicBulletIndex = 0;\n\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', \".\" + params.bulletClass, function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n\n          if (swiper.params.loop) {\n            index += swiper.loopedSlides;\n          }\n\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0]\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n        return;\n      }\n\n      var $el = swiper.pagination.$el;\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n\n      if (swiper.pagination.bullets) {\n        swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n      }\n\n      if (params.clickable) {\n        $el.off('click', \".\" + params.bulletClass);\n      }\n    }\n  };\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets',\n        // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function formatFractionCurrent(number) {\n          return number;\n        },\n        formatFractionTotal: function formatFractionTotal(number) {\n          return number;\n        },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-',\n        // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable',\n        // NEW\n        lockClass: 'swiper-pagination-lock'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(e.target).hasClass(swiper.params.pagination.bulletClass)) {\n          var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n\n          if (isHidden === true) {\n            swiper.emit('paginationShow', swiper);\n          } else {\n            swiper.emit('paginationHide', swiper);\n          }\n\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      }\n    }\n  };\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n        return;\n      }\n\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n\n      if (rtl) {\n        newPos = -newPos;\n\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n        return;\n      }\n\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n        return;\n      }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    getPointerPosition: function getPointerPosition(e) {\n      var swiper = this;\n\n      if (swiper.isHorizontal()) {\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n      }\n\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var dragStartPos = scrollbar.dragStartPos;\n      var positionRatio;\n      positionRatio = (scrollbar.getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      swiper.scrollbar.dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n      e.preventDefault();\n      e.stopPropagation();\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      $el.transition(0);\n\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\n      }\n\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) {\n        return;\n      }\n\n      if (e.preventDefault) {\n        e.preventDefault();\n      } else {\n        e.returnValue = false;\n      }\n\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) {\n        return;\n      }\n\n      swiper.scrollbar.isTouched = false;\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', '');\n        $wrapperEl.transition('');\n      }\n\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n\n      swiper.emit('scrollbarDragEnd', e);\n\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n\n      if (!swiper.params.scrollbar.el) {\n        return;\n      }\n\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n\n      if (!Support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n\n      if (!swiper.params.scrollbar.el) {\n        return;\n      }\n\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n\n      if (!Support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      if (!swiper.params.scrollbar.el) {\n        return;\n      }\n\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n      var $el = $(params.el);\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n\n      if ($dragEl.length === 0) {\n        $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0]\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    }\n  };\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      }\n    }\n  };\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if (x.indexOf('%') >= 0) {\n        x = parseInt(x, 10) * progress * rtlFactor + \"%\";\n      } else {\n        x = x * progress * rtlFactor + \"px\";\n      }\n\n      if (y.indexOf('%') >= 0) {\n        y = parseInt(y, 10) * progress + \"%\";\n      } else {\n        y = y * progress + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n        $el[0].style.opacity = currentOpacity;\n      }\n\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px)\");\n      } else {\n        var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n        $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\");\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, el) {\n        swiper.parallax.setTransform(el, progress);\n      });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n        }\n\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, el) {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if (duration === void 0) duration = this.params.speed;\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, parallaxEl) {\n        var $parallaxEl = $(parallaxEl);\n        var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n\n        if (duration === 0) {\n          parallaxDuration = 0;\n        }\n\n        $parallaxEl.transition(parallaxDuration);\n      });\n    }\n  };\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper)\n        }\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n\n        if (!swiper.params.parallax.enabled) {\n          return;\n        }\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n\n        if (!swiper.params.parallax.enabled) {\n          return;\n        }\n\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n\n        if (!swiper.params.parallax.enabled) {\n          return;\n        }\n\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n\n        if (!swiper.params.parallax.enabled) {\n          return;\n        }\n\n        swiper.parallax.setTransition(duration);\n      }\n    }\n  };\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) {\n        return 1;\n      }\n\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n\n        if (gesture.$slideEl.length === 0) {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        return;\n      }\n\n      if (Support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;\n      }\n\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n      }\n\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n      }\n\n      gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n\n        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android) {\n          return;\n        }\n\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        return;\n      }\n\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n\n      if (zoom.scale === 1) {\n        gesture.$slideEl = undefined;\n      }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        return;\n      }\n\n      if (image.isTouched) {\n        return;\n      }\n\n      if (Device.android) {\n        e.preventDefault();\n      }\n\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        return;\n      }\n\n      swiper.allowClick = false;\n\n      if (!image.isTouched || !gesture.$slideEl) {\n        return;\n      }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      } // Define if we need image drag\n\n\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) {\n        return;\n      }\n\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n          image.isTouched = false;\n          return;\n        }\n\n        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n          image.isTouched = false;\n          return;\n        }\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n      image.isMoved = true;\n      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n      }\n\n      if (image.currentX > image.maxX) {\n        image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n      }\n\n      if (image.currentY > image.maxY) {\n        image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n      } // Velocity\n\n\n      if (!velocity.prevPositionX) {\n        velocity.prevPositionX = image.touchesCurrent.x;\n      }\n\n      if (!velocity.prevPositionY) {\n        velocity.prevPositionY = image.touchesCurrent.y;\n      }\n\n      if (!velocity.prevTime) {\n        velocity.prevTime = Date.now();\n      }\n\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) {\n        velocity.x = 0;\n      }\n\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) {\n        velocity.y = 0;\n      }\n\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n      gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        return;\n      }\n\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n      if (velocity.x !== 0) {\n        momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n      }\n\n      if (velocity.y !== 0) {\n        momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n      }\n\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n      image.currentX = newPositionX;\n      image.currentY = newPositionY; // Define if we need image drag\n\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n      gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom[\"in\"](e);\n      }\n    },\n    \"in\": function in$1(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        return;\n      }\n\n      gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = offsetX + slideWidth / 2 - touchX;\n        diffY = offsetY + slideHeight / 2 - touchY;\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n\n      gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n      gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    out: function out() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        return;\n      }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.enabled) {\n        return;\n      }\n\n      zoom.enabled = true;\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      var activeListenerWithCapture = Support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      var slideSelector = \".\" + swiper.params.slideClass; // Scale image\n\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (!zoom.enabled) {\n        return;\n      }\n\n      swiper.zoom.enabled = false;\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      var activeListenerWithCapture = Support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      var slideSelector = \".\" + swiper.params.slideClass; // Scale image\n\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n    }\n  };\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {}\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined\n        }\n      };\n      'onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out'.split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom\n      });\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n\n          scale = value;\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n\n        if (!swiper.zoom.enabled) {\n          return;\n        }\n\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n\n        if (!swiper.zoom.enabled) {\n          return;\n        }\n\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n          swiper.zoom.onTransitionEnd();\n        }\n      }\n    }\n  };\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if (loadInDuplicate === void 0) loadInDuplicate = true;\n      var swiper = this;\n      var params = swiper.params.lazy;\n\n      if (typeof index === 'undefined') {\n        return;\n      }\n\n      if (swiper.slides.length === 0) {\n        return;\n      }\n\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\") : swiper.slides.eq(index);\n      var $images = $slideEl.find(\".\" + params.elementClass + \":not(.\" + params.loadedClass + \"):not(.\" + params.loadingClass + \")\");\n\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n\n      if ($images.length === 0) {\n        return;\n      }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) {\n            return;\n          }\n\n          if (background) {\n            $imageEl.css('background-image', \"url(\\\"\" + background + \"\\\")\");\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find(\".\" + params.preloaderClass).remove();\n\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + swiper.params.slideDuplicateClass + \")\");\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children(\".\" + swiper.params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\");\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        });\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n      var slidesPerView = swiperParams.slidesPerView;\n\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children(\".\" + swiperParams.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\").length) {\n            return true;\n          }\n        } else if (slides[index]) {\n          return true;\n        }\n\n        return false;\n      }\n\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) {\n        swiper.lazy.initialImageLoaded = true;\n      }\n\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children(\".\" + swiperParams.slideVisibleClass).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) {\n            swiper.lazy.loadInSlide(i);\n          }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) {\n              swiper.lazy.loadInSlide(i$1);\n            }\n          } // Prev Slides\n\n\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) {\n              swiper.lazy.loadInSlide(i$2);\n            }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children(\".\" + swiperParams.slideNextClass);\n\n          if (nextSlide.length > 0) {\n            swiper.lazy.loadInSlide(slideIndex(nextSlide));\n          }\n\n          var prevSlide = $wrapperEl.children(\".\" + swiperParams.slidePrevClass);\n\n          if (prevSlide.length > 0) {\n            swiper.lazy.loadInSlide(slideIndex(prevSlide));\n          }\n        }\n      }\n    }\n  };\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper)\n        }\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n\n        if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n          swiper.lazy.load();\n        }\n      }\n    }\n  };\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n\n          return maxIndex;\n        };\n      }();\n\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) {\n          return 0;\n        } // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n      };\n\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n\n        if (duration !== 0) {\n          c.transitionStart();\n\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) {\n              return;\n            }\n\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n\n            c.transitionEnd();\n          });\n        }\n      }\n\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    }\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide' // or 'container'\n\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper)\n        }\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n\n        if (!swiper.controller.control) {\n          return;\n        }\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n\n        if (!swiper.controller.control) {\n          return;\n        }\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n\n        if (!swiper.controller.control) {\n          return;\n        }\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n\n        if (!swiper.controller.control) {\n          return;\n        }\n\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n\n        if (!swiper.controller.control) {\n          return;\n        }\n\n        swiper.controller.setTransition(duration, byController);\n      }\n    }\n  };\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n\n      if (e.keyCode !== 13) {\n        return;\n      }\n\n      var $targetEl = $(e.target);\n\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n\n      if (swiper.pagination && $targetEl.is(\".\" + swiper.params.pagination.bulletClass)) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n\n      if (notification.length === 0) {\n        return;\n      }\n\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop || !swiper.navigation) {\n        return;\n      }\n\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      swiper.$el.append(swiper.a11y.liveRegion); // Navigation\n\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      } // Pagination\n\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', \".\" + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) {\n        swiper.a11y.liveRegion.remove();\n      }\n\n      var $nextEl;\n      var $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      } // Pagination\n\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', \".\" + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);\n      }\n    }\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $(\"<span class=\\\"\" + swiper.params.a11y.notificationClass + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")\n        }\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n\n        if (!swiper.params.a11y.enabled) {\n          return;\n        }\n\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n\n        if (!swiper.params.a11y.enabled) {\n          return;\n        }\n\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n\n        if (!swiper.params.a11y.enabled) {\n          return;\n        }\n\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n\n        if (!swiper.params.a11y.enabled) {\n          return;\n        }\n\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (!swiper.params.a11y.enabled) {\n          return;\n        }\n\n        swiper.a11y.destroy();\n      }\n    }\n  };\n  var History = {\n    init: function init() {\n      var swiper = this;\n\n      if (!swiper.params.history) {\n        return;\n      }\n\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n\n      if (!history.paths.key && !history.paths.value) {\n        return;\n      }\n\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) {\n        return part !== '';\n      });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return {\n        key: key,\n        value: value\n      };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n\n      if (!swiper.history.initialized || !swiper.params.history.enabled) {\n        return;\n      }\n\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n\n      var currentState = win.history.state;\n\n      if (currentState && currentState.value === value) {\n        return;\n      }\n\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({\n          value: value\n        }, null, value);\n      } else {\n        win.history.pushState({\n          value: value\n        }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    }\n  };\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper)\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n\n        if (swiper.history.initialized && swiper.params.cssMode) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      }\n    }\n  };\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-hash=\\\"\" + newHash + \"\\\"]\").index();\n\n        if (typeof newIndex === 'undefined') {\n          return;\n        }\n\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) {\n        return;\n      }\n\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, \"#\" + swiper.slides.eq(swiper.activeIndex).attr('data-hash') || '');\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) {\n        return;\n      }\n\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n\n      if (hash) {\n        var speed = 0;\n\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    }\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper)\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n\n        if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n          swiper.hashNavigation.setHash();\n        }\n      }\n    }\n  };\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n\n        if (swiper.params.cssMode && swiper.autoplay.running) {\n          swiper.autoplay.run();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n\n      if (typeof swiper.autoplay.timeout !== 'undefined') {\n        return false;\n      }\n\n      if (swiper.autoplay.running) {\n        return false;\n      }\n\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n\n      if (!swiper.autoplay.running) {\n        return false;\n      }\n\n      if (typeof swiper.autoplay.timeout === 'undefined') {\n        return false;\n      }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n\n      if (!swiper.autoplay.running) {\n        return;\n      }\n\n      if (swiper.autoplay.paused) {\n        return;\n      }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n      }\n\n      swiper.autoplay.paused = true;\n\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    }\n  };\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onVisibilityChange: function onVisibilityChange() {\n            if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n              swiper.autoplay.pause();\n            }\n\n            if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n              swiper.autoplay.run();\n              swiper.autoplay.paused = false;\n            }\n          },\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) {\n              return;\n            }\n\n            if (e.target !== this) {\n              return;\n            }\n\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          }\n        }\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n          document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      touchEnd: function touchEnd() {\n        var swiper = this;\n\n        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.run();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n\n        document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    }\n  };\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n\n        if (!swiper.params.virtualTranslate) {\n          tx -= swiper.translate;\n        }\n\n        var ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl.css({\n          opacity: slideOpacity\n        }).transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\");\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) {\n            return;\n          }\n\n          if (!swiper || swiper.destroyed) {\n            return;\n          }\n\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n  };\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper)\n        }\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'fade') {\n          return;\n        }\n\n        swiper.classNames.push(swiper.params.containerModifierClass + \"fade\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'fade') {\n          return;\n        }\n\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'fade') {\n          return;\n        }\n\n        swiper.fadeEffect.setTransition(duration);\n      }\n    }\n  };\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n\n          $cubeShadowEl.css({\n            height: swiperWidth + \"px\"\n          });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + round * 4 * swiperSize;\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = 3 * swiperSize + swiperSize * 4 * round;\n        }\n\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = slideIndex * 90 + progress * 90;\n\n          if (rtl) {\n            wrapperRotate = -slideIndex * 90 - progress * 90;\n          }\n        }\n\n        $slideEl.transform(transform);\n\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) {\n            shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          }\n\n          if (shadowAfter.length) {\n            shadowAfter[0].style.opacity = Math.max(progress, 0);\n          }\n        }\n      }\n\n      $wrapperEl.css({\n        '-webkit-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        '-moz-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        '-ms-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        'transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\"\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform(\"translate3d(0px, \" + (swiperWidth / 2 + params.shadowOffset) + \"px, \" + -swiperWidth / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + params.shadowScale + \")\");\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n          var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform(\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + (swiperHeight / 2 + offset) + \"px, \" + -swiperHeight / 2 / scale2 + \"px) rotateX(-90deg)\");\n        }\n      }\n\n      var zFactor = Browser.isSafari || Browser.isUiWebView ? -swiperSize / 2 : 0;\n      $wrapperEl.transform(\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\");\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    }\n  };\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper)\n        }\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'cube') {\n          return;\n        }\n\n        swiper.classNames.push(swiper.params.containerModifierClass + \"cube\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'cube') {\n          return;\n        }\n\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'cube') {\n          return;\n        }\n\n        swiper.cubeEffect.setTransition(duration);\n      }\n    }\n  };\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) {\n            shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          }\n\n          if (shadowAfter.length) {\n            shadowAfter[0].style.opacity = Math.max(progress, 0);\n          }\n        }\n\n        $slideEl.transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false; // eslint-disable-next-line\n\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) {\n            return;\n          }\n\n          if (!swiper || swiper.destroyed) {\n            return;\n          } // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n\n\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n  };\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper)\n        }\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'flip') {\n          return;\n        }\n\n        swiper.classNames.push(swiper.params.containerModifierClass + \"flip\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'flip') {\n          return;\n        }\n\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'flip') {\n          return;\n        }\n\n        swiper.flipEffect.setTransition(duration);\n      }\n    }\n  };\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth; // Each slide offset from center\n\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n        var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n        if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n          stretch = parseFloat(params.stretch) / 100 * slideSize;\n        }\n\n        var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n        var translateX = isHorizontal ? stretch * offsetMultiplier : 0; // Fix for ultra small values\n\n        if (Math.abs(translateX) < 0.001) {\n          translateX = 0;\n        }\n\n        if (Math.abs(translateY) < 0.001) {\n          translateY = 0;\n        }\n\n        if (Math.abs(translateZ) < 0.001) {\n          translateZ = 0;\n        }\n\n        if (Math.abs(rotateY) < 0.001) {\n          rotateY = 0;\n        }\n\n        if (Math.abs(rotateX) < 0.001) {\n          rotateX = 0;\n        }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append($shadowBeforeEl);\n          }\n\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append($shadowAfterEl);\n          }\n\n          if ($shadowBeforeEl.length) {\n            $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n          }\n\n          if ($shadowAfterEl.length) {\n            $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n          }\n        }\n      } // Set correct perspective for IE10\n\n\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    }\n  };\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper)\n        }\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'coverflow') {\n          return;\n        }\n\n        swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'coverflow') {\n          return;\n        }\n\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n\n        if (swiper.params.effect !== 'coverflow') {\n          return;\n        }\n\n        swiper.coverflowEffect.setTransition(duration);\n      }\n    }\n  };\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var ref = swiper.params;\n      var thumbsParams = ref.thumbs;\n      var SwiperClass = swiper.constructor;\n\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Utils.extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n        Utils.extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n      } else if (Utils.isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n\n      if (!thumbsSwiper) {\n        return;\n      }\n\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) {\n        return;\n      }\n\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) {\n        return;\n      }\n\n      var slideToIndex;\n\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix(); // eslint-disable-next-line\n\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n\n        if (typeof prevIndex === 'undefined') {\n          slideToIndex = nextIndex;\n        } else if (typeof nextIndex === 'undefined') {\n          slideToIndex = prevIndex;\n        } else if (nextIndex - currentIndex < currentIndex - prevIndex) {\n          slideToIndex = nextIndex;\n        } else {\n          slideToIndex = prevIndex;\n        }\n      }\n\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n\n      if (!thumbsSwiper) {\n        return;\n      }\n\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          } // Find actual thumbs index to slide to\n\n\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n\n          if (typeof prevThumbsIndex === 'undefined') {\n            newThumbsIndex = nextThumbsIndex;\n          } else if (typeof nextThumbsIndex === 'undefined') {\n            newThumbsIndex = prevThumbsIndex;\n          } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n            newThumbsIndex = currentThumbsIndex;\n          } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n            newThumbsIndex = nextThumbsIndex;\n          } else {\n            newThumbsIndex = prevThumbsIndex;\n          }\n        } else {\n          newThumbsIndex = swiper.realIndex;\n        }\n\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      } // Activate thumbs\n\n\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      if (!swiper.params.thumbs.multipleActiveThumbs) {\n        thumbsToActivate = 1;\n      }\n\n      thumbsToActivate = Math.floor(thumbsToActivate);\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n      if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\").addClass(thumbActiveClass);\n        }\n      } else {\n        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n        }\n      }\n    }\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        multipleActiveThumbs: true,\n        swiper: null,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        thumbs: {\n          swiper: null,\n          init: Thumbs.init.bind(swiper),\n          update: Thumbs.update.bind(swiper),\n          onThumbClick: Thumbs.onThumbClick.bind(swiper)\n        }\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbs = ref.thumbs;\n\n        if (!thumbs || !thumbs.swiper) {\n          return;\n        }\n\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n\n        if (!swiper.thumbs.swiper) {\n          return;\n        }\n\n        swiper.thumbs.update();\n      },\n      update: function update() {\n        var swiper = this;\n\n        if (!swiper.thumbs.swiper) {\n          return;\n        }\n\n        swiper.thumbs.update();\n      },\n      resize: function resize() {\n        var swiper = this;\n\n        if (!swiper.thumbs.swiper) {\n          return;\n        }\n\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n\n        if (!swiper.thumbs.swiper) {\n          return;\n        }\n\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n\n        if (!thumbsSwiper) {\n          return;\n        }\n\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n\n        if (!thumbsSwiper) {\n          return;\n        }\n\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      }\n    }\n  }; // Swiper Class\n\n  var components = [Device$1, Support$1, Browser$1, Resize, Observer$1, Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n  return Swiper;\n});","jQuery(document).ready(function ($) {\n  console.log(\"hello\");\n  $(\".component.navigation\").each(function () {\n    var submenuLink = $(this).find(\"li.submenu\");\n\n    function openList(list) {\n      list.addClass(\"active\");\n    }\n\n    function close(list) {\n      list.removeClass(\"active\");\n    }\n\n    submenuLink.click(function () {\n      console.log($(this).find(\"ul:first\"));\n      var list = $(this).find(\"ul:first\");\n      openList(list);\n    });\n    submenuLink.on(\"contextmenu\", function () {\n      return false;\n    });\n    submenuLink.click(function (e) {\n      e.preventDefault();\n    });\n    $(document).on(\"click\", function (e) {\n      if (!$(e.target).hasClass(\".clearfix.active\") || !$(e.target).parent().hasClass(\".submenu\")) {\n        console.log(\"true\");\n        close($(\".clearfix.active\"));\n      }\n\n      ;\n    });\n  });\n});","var myFn = function myFn(x) {\n  console.log(\"test\");\n};\n\nmyFn();"]}